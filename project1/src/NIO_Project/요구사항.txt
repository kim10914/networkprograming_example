0. 데이터 타입
JSON 형식을 사용한다. -> GSON 라이브러리 사용
1. 서버
서버는 NIO를 활용
    1.1 ServerSocketChannel 설정
    - ServerSocketChannel을 사용해 클라이언트의 연결을 기다린다.
    - Selector를 사용해 클라이언트 소켓을 비차단 방식으로 처리
    1.2 로그온 기능 개선
    - 클라이언트의 ID가 중복되는지 확인하고, 중복되지 않으면 로그온을 허용한다.
    - 로그인 시 기존 사용자들에게 새로운 사용자의 로그온 사실을 알려준다.
    - 새로 로그인한 사용자에게는 기존 사용자들의 ID 목록을 전달한다.
    1.3 로그아웃 기능 구현
    - 클라이언트가 로그아웃하면 다른 클라이언트에게 로그아웃 사실을 전송한다.
    - 클라이언트가 윈오우를 닫을때 로그아웃 후 종료
    - 로그아웃 시, 해당 클라이언트는 재로그인 가능
    1.4 메시지 처리
    - 서버는 클라이언트의 로그온 사태를 확인하여 대화 메시지를 전달
    - 모든 메시지는 서버에서 파일에 기록된다.
2. 클라이언트 구조
클라이언트 - 서버의 연결 주조는 SocketChannel을 사용해 비차단 방식으로 처리
    2.1 로그인 처리
    - 사용자가 ID를 입력하고 로그인 요청을 서버에 보낸다.
    - 로그온 시 서버에서 기존 사용자들의 ID목록을 받아 표시
    - 로그아웃 후 클라이언트가 윈도우를 닫으면 서버에 로그아웃 메시지를 전송하고, 프로그램 종료
    2.2 메시지 송수신
    - 사용자가 입력한 메시지는 서버로 전송되며, 서버는 해당메시지를 처리하여 연결된 클라이언트들 에게 전달
